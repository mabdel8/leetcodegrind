import { Problem } from './problems'

// Extended problems to reach 300+ total problems
export const extendedProblems: Problem[] = [
  // More Trees Problems
  {
    id: 'validate-binary-search-tree',
    title: 'Validate Binary Search Tree',
    difficulty: 'Medium',
    category: 'Tree',
    patterns: ['trees'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 68,
    leetcodeUrl: 'https://leetcode.com/problems/validate-binary-search-tree/',
    sources: ['LeetCodeWizard', 'NeetCode', 'Blind75'],
    timeComplexity: 'O(n)',
    spaceComplexity: 'O(h)'
  },
  {
    id: 'kth-smallest-element-in-bst',
    title: 'Kth Smallest Element in a BST',
    difficulty: 'Medium',
    category: 'Tree',
    patterns: ['trees'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 64,
    leetcodeUrl: 'https://leetcode.com/problems/kth-smallest-element-in-a-bst/',
    sources: ['LeetCodeWizard', 'NeetCode'],
    timeComplexity: 'O(h + k)',
    spaceComplexity: 'O(h)'
  },
  {
    id: 'lowest-common-ancestor-bst',
    title: 'Lowest Common Ancestor of a Binary Search Tree',
    difficulty: 'Easy',
    category: 'Tree',
    patterns: ['trees'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 59,
    leetcodeUrl: 'https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/',
    sources: ['NeetCode', 'Blind75'],
    timeComplexity: 'O(h)',
    spaceComplexity: 'O(1)'
  },
  {
    id: 'binary-tree-level-order-traversal',
    title: 'Binary Tree Level Order Traversal',
    difficulty: 'Medium',
    category: 'Tree',
    patterns: ['trees'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 72,
    leetcodeUrl: 'https://leetcode.com/problems/binary-tree-level-order-traversal/',
    sources: ['LeetCodeWizard', 'NeetCode', 'Blind75'],
    timeComplexity: 'O(n)',
    spaceComplexity: 'O(n)'
  },
  {
    id: 'serialize-deserialize-binary-tree',
    title: 'Serialize and Deserialize Binary Tree',
    difficulty: 'Hard',
    category: 'Tree',
    patterns: ['trees'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 61,
    leetcodeUrl: 'https://leetcode.com/problems/serialize-and-deserialize-binary-tree/',
    sources: ['NeetCode', 'Blind75'],
    timeComplexity: 'O(n)',
    spaceComplexity: 'O(n)'
  },
  {
    id: 'construct-binary-tree-preorder-inorder',
    title: 'Construct Binary Tree from Preorder and Inorder Traversal',
    difficulty: 'Medium',
    category: 'Tree',
    patterns: ['trees'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 58,
    leetcodeUrl: 'https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/',
    sources: ['NeetCode', 'Blind75'],
    timeComplexity: 'O(n)',
    spaceComplexity: 'O(n)'
  },
  {
    id: 'binary-tree-maximum-path-sum',
    title: 'Binary Tree Maximum Path Sum',
    difficulty: 'Hard',
    category: 'Tree',
    patterns: ['trees'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 67,
    leetcodeUrl: 'https://leetcode.com/problems/binary-tree-maximum-path-sum/',
    sources: ['LeetCodeWizard', 'NeetCode', 'Blind75'],
    timeComplexity: 'O(n)',
    spaceComplexity: 'O(h)'
  },
  {
    id: 'subtree-of-another-tree',
    title: 'Subtree of Another Tree',
    difficulty: 'Easy',
    category: 'Tree',
    patterns: ['trees'],
    companies: ['Google', 'Amazon', 'Facebook'],
    frequency: 55,
    leetcodeUrl: 'https://leetcode.com/problems/subtree-of-another-tree/',
    sources: ['NeetCode', 'Blind75'],
    timeComplexity: 'O(m * n)',
    spaceComplexity: 'O(h)'
  },

  // More Graph Problems
  {
    id: 'course-schedule',
    title: 'Course Schedule',
    difficulty: 'Medium',
    category: 'Graph',
    patterns: ['graphs'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 69,
    leetcodeUrl: 'https://leetcode.com/problems/course-schedule/',
    sources: ['LeetCodeWizard', 'NeetCode', 'Blind75'],
    timeComplexity: 'O(V + E)',
    spaceComplexity: 'O(V + E)'
  },
  {
    id: 'course-schedule-ii',
    title: 'Course Schedule II',
    difficulty: 'Medium',
    category: 'Graph',
    patterns: ['graphs'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 61,
    leetcodeUrl: 'https://leetcode.com/problems/course-schedule-ii/',
    sources: ['LeetCodeWizard', 'NeetCode'],
    timeComplexity: 'O(V + E)',
    spaceComplexity: 'O(V + E)'
  },
  {
    id: 'word-ladder',
    title: 'Word Ladder',
    difficulty: 'Hard',
    category: 'Graph',
    patterns: ['graphs'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 54,
    leetcodeUrl: 'https://leetcode.com/problems/word-ladder/',
    sources: ['LeetCodeWizard', 'NeetCode'],
    timeComplexity: 'O(M^2 * N)',
    spaceComplexity: 'O(M^2 * N)'
  },
  {
    id: 'surrounded-regions',
    title: 'Surrounded Regions',
    difficulty: 'Medium',
    category: 'Graph',
    patterns: ['graphs'],
    companies: ['Google', 'Amazon', 'Microsoft'],
    frequency: 48,
    leetcodeUrl: 'https://leetcode.com/problems/surrounded-regions/',
    sources: ['NeetCode'],
    timeComplexity: 'O(m * n)',
    spaceComplexity: 'O(m * n)'
  },
  {
    id: 'rotting-oranges',
    title: 'Rotting Oranges',
    difficulty: 'Medium',
    category: 'Graph',
    patterns: ['graphs'],
    companies: ['Google', 'Amazon', 'Microsoft'],
    frequency: 52,
    leetcodeUrl: 'https://leetcode.com/problems/rotting-oranges/',
    sources: ['LeetCodeWizard'],
    timeComplexity: 'O(m * n)',
    spaceComplexity: 'O(m * n)'
  },
  {
    id: 'walls-and-gates',
    title: 'Walls and Gates',
    difficulty: 'Medium',
    category: 'Graph',
    patterns: ['graphs'],
    companies: ['Google', 'Facebook'],
    frequency: 41,
    leetcodeUrl: 'https://leetcode.com/problems/walls-and-gates/',
    sources: ['NeetCode'],
    timeComplexity: 'O(m * n)',
    spaceComplexity: 'O(m * n)'
  },

  // More Dynamic Programming Problems
  {
    id: 'coin-change',
    title: 'Coin Change',
    difficulty: 'Medium',
    category: 'Dynamic Programming',
    patterns: ['1d-dynamic-programming'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 71,
    leetcodeUrl: 'https://leetcode.com/problems/coin-change/',
    sources: ['LeetCodeWizard', 'NeetCode', 'Blind75'],
    timeComplexity: 'O(amount * coins)',
    spaceComplexity: 'O(amount)'
  },
  {
    id: 'longest-increasing-subsequence',
    title: 'Longest Increasing Subsequence',
    difficulty: 'Medium',
    category: 'Dynamic Programming',
    patterns: ['1d-dynamic-programming'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 63,
    leetcodeUrl: 'https://leetcode.com/problems/longest-increasing-subsequence/',
    sources: ['LeetCodeWizard', 'NeetCode', 'Blind75'],
    timeComplexity: 'O(n log n)',
    spaceComplexity: 'O(n)'
  },
  {
    id: 'word-break',
    title: 'Word Break',
    difficulty: 'Medium',
    category: 'Dynamic Programming',
    patterns: ['1d-dynamic-programming'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 68,
    leetcodeUrl: 'https://leetcode.com/problems/word-break/',
    sources: ['LeetCodeWizard', 'NeetCode', 'Blind75'],
    timeComplexity: 'O(n^2)',
    spaceComplexity: 'O(n)'
  },
  {
    id: 'combination-sum-iv',
    title: 'Combination Sum IV',
    difficulty: 'Medium',
    category: 'Dynamic Programming',
    patterns: ['1d-dynamic-programming'],
    companies: ['Google', 'Amazon', 'Facebook'],
    frequency: 49,
    leetcodeUrl: 'https://leetcode.com/problems/combination-sum-iv/',
    sources: ['NeetCode'],
    timeComplexity: 'O(target * nums)',
    spaceComplexity: 'O(target)'
  },
  {
    id: 'house-robber-ii',
    title: 'House Robber II',
    difficulty: 'Medium',
    category: 'Dynamic Programming',
    patterns: ['1d-dynamic-programming'],
    companies: ['Google', 'Amazon', 'Microsoft'],
    frequency: 56,
    leetcodeUrl: 'https://leetcode.com/problems/house-robber-ii/',
    sources: ['NeetCode', 'Blind75'],
    timeComplexity: 'O(n)',
    spaceComplexity: 'O(1)'
  },
  {
    id: 'decode-ways',
    title: 'Decode Ways',
    difficulty: 'Medium',
    category: 'Dynamic Programming',
    patterns: ['1d-dynamic-programming'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 58,
    leetcodeUrl: 'https://leetcode.com/problems/decode-ways/',
    sources: ['NeetCode', 'Blind75'],
    timeComplexity: 'O(n)',
    spaceComplexity: 'O(1)'
  },
  {
    id: 'unique-paths',
    title: 'Unique Paths',
    difficulty: 'Medium',
    category: 'Dynamic Programming',
    patterns: ['2d-dynamic-programming'],
    companies: ['Google', 'Amazon', 'Microsoft'],
    frequency: 62,
    leetcodeUrl: 'https://leetcode.com/problems/unique-paths/',
    sources: ['NeetCode', 'Blind75'],
    timeComplexity: 'O(m * n)',
    spaceComplexity: 'O(m * n)'
  },
  {
    id: 'longest-common-subsequence',
    title: 'Longest Common Subsequence',
    difficulty: 'Medium',
    category: 'Dynamic Programming',
    patterns: ['2d-dynamic-programming'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 59,
    leetcodeUrl: 'https://leetcode.com/problems/longest-common-subsequence/',
    sources: ['NeetCode'],
    timeComplexity: 'O(m * n)',
    spaceComplexity: 'O(m * n)'
  },

  // Heap/Priority Queue Problems
  {
    id: 'find-median-from-data-stream',
    title: 'Find Median from Data Stream',
    difficulty: 'Hard',
    category: 'Heap',
    patterns: ['heap-priority-queue'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 73,
    leetcodeUrl: 'https://leetcode.com/problems/find-median-from-data-stream/',
    sources: ['LeetCodeWizard', 'NeetCode', 'Blind75'],
    timeComplexity: 'O(log n)',
    spaceComplexity: 'O(n)'
  },
  {
    id: 'task-scheduler',
    title: 'Task Scheduler',
    difficulty: 'Medium',
    category: 'Heap',
    patterns: ['heap-priority-queue', 'greedy'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 65,
    leetcodeUrl: 'https://leetcode.com/problems/task-scheduler/',
    sources: ['LeetCodeWizard', 'NeetCode'],
    timeComplexity: 'O(n)',
    spaceComplexity: 'O(1)'
  },
  {
    id: 'twitter-design',
    title: 'Design Twitter',
    difficulty: 'Medium',
    category: 'Design',
    patterns: ['heap-priority-queue'],
    companies: ['Amazon', 'Facebook'],
    frequency: 42,
    leetcodeUrl: 'https://leetcode.com/problems/design-twitter/',
    sources: ['NeetCode'],
    timeComplexity: 'O(log n)',
    spaceComplexity: 'O(n)'
  },
  {
    id: 'kth-largest-element-in-array',
    title: 'Kth Largest Element in an Array',
    difficulty: 'Medium',
    category: 'Array',
    patterns: ['heap-priority-queue'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 76,
    leetcodeUrl: 'https://leetcode.com/problems/kth-largest-element-in-an-array/',
    sources: ['LeetCodeWizard', 'NeetCode'],
    timeComplexity: 'O(n log k)',
    spaceComplexity: 'O(k)'
  },

  // Backtracking Problems
  {
    id: 'subsets',
    title: 'Subsets',
    difficulty: 'Medium',
    category: 'Array',
    patterns: ['backtracking'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 67,
    leetcodeUrl: 'https://leetcode.com/problems/subsets/',
    sources: ['LeetCodeWizard', 'NeetCode', 'Blind75'],
    timeComplexity: 'O(2^n)',
    spaceComplexity: 'O(2^n)'
  },
  {
    id: 'combination-sum',
    title: 'Combination Sum',
    difficulty: 'Medium',
    category: 'Array',
    patterns: ['backtracking'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 61,
    leetcodeUrl: 'https://leetcode.com/problems/combination-sum/',
    sources: ['NeetCode', 'Blind75'],
    timeComplexity: 'O(2^target)',
    spaceComplexity: 'O(target)'
  },
  {
    id: 'permutations',
    title: 'Permutations',
    difficulty: 'Medium',
    category: 'Array',
    patterns: ['backtracking'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 69,
    leetcodeUrl: 'https://leetcode.com/problems/permutations/',
    sources: ['LeetCodeWizard', 'NeetCode', 'Blind75'],
    timeComplexity: 'O(n!)',
    spaceComplexity: 'O(n!)'
  },
  {
    id: 'word-search',
    title: 'Word Search',
    difficulty: 'Medium',
    category: 'Array',
    patterns: ['backtracking'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 64,
    leetcodeUrl: 'https://leetcode.com/problems/word-search/',
    sources: ['LeetCodeWizard', 'NeetCode', 'Blind75'],
    timeComplexity: 'O(N * 4^L)',
    spaceComplexity: 'O(L)'
  },
  {
    id: 'palindrome-partitioning',
    title: 'Palindrome Partitioning',
    difficulty: 'Medium',
    category: 'String',
    patterns: ['backtracking'],
    companies: ['Google', 'Amazon', 'Facebook'],
    frequency: 52,
    leetcodeUrl: 'https://leetcode.com/problems/palindrome-partitioning/',
    sources: ['NeetCode'],
    timeComplexity: 'O(2^n)',
    spaceComplexity: 'O(n)'
  },
  {
    id: 'letter-combinations-phone-number',
    title: 'Letter Combinations of a Phone Number',
    difficulty: 'Medium',
    category: 'String',
    patterns: ['backtracking'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 71,
    leetcodeUrl: 'https://leetcode.com/problems/letter-combinations-of-a-phone-number/',
    sources: ['LeetCodeWizard'],
    timeComplexity: 'O(3^n * 4^m)',
    spaceComplexity: 'O(3^n * 4^m)'
  },

  // Tries Problems
  {
    id: 'implement-trie',
    title: 'Implement Trie (Prefix Tree)',
    difficulty: 'Medium',
    category: 'Trie',
    patterns: ['tries'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 66,
    leetcodeUrl: 'https://leetcode.com/problems/implement-trie-prefix-tree/',
    sources: ['LeetCodeWizard', 'NeetCode', 'Blind75'],
    timeComplexity: 'O(m)',
    spaceComplexity: 'O(ALPHABET_SIZE * N * M)'
  },
  {
    id: 'design-add-search-words',
    title: 'Design Add and Search Words Data Structure',
    difficulty: 'Medium',
    category: 'Trie',
    patterns: ['tries'],
    companies: ['Google', 'Amazon', 'Facebook'],
    frequency: 57,
    leetcodeUrl: 'https://leetcode.com/problems/design-add-and-search-words-data-structure/',
    sources: ['NeetCode', 'Blind75'],
    timeComplexity: 'O(m)',
    spaceComplexity: 'O(ALPHABET_SIZE * N * M)'
  },
  {
    id: 'word-search-ii',
    title: 'Word Search II',
    difficulty: 'Hard',
    category: 'Array',
    patterns: ['tries', 'backtracking'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 58,
    leetcodeUrl: 'https://leetcode.com/problems/word-search-ii/',
    sources: ['NeetCode', 'Blind75'],
    timeComplexity: 'O(m * n * 4^L)',
    spaceComplexity: 'O(N)'
  },

  // More Greedy Problems
  {
    id: 'jump-game',
    title: 'Jump Game',
    difficulty: 'Medium',
    category: 'Array',
    patterns: ['greedy'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 68,
    leetcodeUrl: 'https://leetcode.com/problems/jump-game/',
    sources: ['LeetCodeWizard', 'NeetCode', 'Blind75'],
    timeComplexity: 'O(n)',
    spaceComplexity: 'O(1)'
  },
  {
    id: 'jump-game-ii',
    title: 'Jump Game II',
    difficulty: 'Medium',
    category: 'Array',
    patterns: ['greedy'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 61,
    leetcodeUrl: 'https://leetcode.com/problems/jump-game-ii/',
    sources: ['LeetCodeWizard'],
    timeComplexity: 'O(n)',
    spaceComplexity: 'O(1)'
  },
  {
    id: 'gas-station',
    title: 'Gas Station',
    difficulty: 'Medium',
    category: 'Array',
    patterns: ['greedy'],
    companies: ['Google', 'Amazon', 'Microsoft'],
    frequency: 54,
    leetcodeUrl: 'https://leetcode.com/problems/gas-station/',
    sources: ['NeetCode'],
    timeComplexity: 'O(n)',
    spaceComplexity: 'O(1)'
  },
  {
    id: 'hand-of-straights',
    title: 'Hand of Straights',
    difficulty: 'Medium',
    category: 'Array',
    patterns: ['greedy'],
    companies: ['Google', 'Amazon'],
    frequency: 43,
    leetcodeUrl: 'https://leetcode.com/problems/hand-of-straights/',
    sources: ['NeetCode'],
    timeComplexity: 'O(n log n)',
    spaceComplexity: 'O(n)'
  },

  // More Math & Geometry Problems
  {
    id: 'rotate-image',
    title: 'Rotate Image',
    difficulty: 'Medium',
    category: 'Array',
    patterns: ['math-geometry'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 65,
    leetcodeUrl: 'https://leetcode.com/problems/rotate-image/',
    sources: ['LeetCodeWizard', 'NeetCode', 'Blind75'],
    timeComplexity: 'O(n^2)',
    spaceComplexity: 'O(1)'
  },
  {
    id: 'spiral-matrix',
    title: 'Spiral Matrix',
    difficulty: 'Medium',
    category: 'Array',
    patterns: ['math-geometry'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 62,
    leetcodeUrl: 'https://leetcode.com/problems/spiral-matrix/',
    sources: ['LeetCodeWizard', 'NeetCode'],
    timeComplexity: 'O(m * n)',
    spaceComplexity: 'O(1)'
  },
  {
    id: 'set-matrix-zeroes',
    title: 'Set Matrix Zeroes',
    difficulty: 'Medium',
    category: 'Array',
    patterns: ['math-geometry'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 59,
    leetcodeUrl: 'https://leetcode.com/problems/set-matrix-zeroes/',
    sources: ['LeetCodeWizard', 'NeetCode'],
    timeComplexity: 'O(m * n)',
    spaceComplexity: 'O(1)'
  },
  {
    id: 'happy-number',
    title: 'Happy Number',
    difficulty: 'Easy',
    category: 'Math',
    patterns: ['math-geometry'],
    companies: ['Google', 'Amazon', 'Facebook'],
    frequency: 47,
    leetcodeUrl: 'https://leetcode.com/problems/happy-number/',
    sources: ['LeetCodeWizard'],
    timeComplexity: 'O(log n)',
    spaceComplexity: 'O(log n)'
  },
  {
    id: 'plus-one',
    title: 'Plus One',
    difficulty: 'Easy',
    category: 'Array',
    patterns: ['math-geometry'],
    companies: ['Google', 'Amazon', 'Microsoft'],
    frequency: 53,
    leetcodeUrl: 'https://leetcode.com/problems/plus-one/',
    sources: ['LeetCodeWizard'],
    timeComplexity: 'O(n)',
    spaceComplexity: 'O(1)'
  },

  // Bit Manipulation Problems
  {
    id: 'single-number',
    title: 'Single Number',
    difficulty: 'Easy',
    category: 'Array',
    patterns: ['bit-manipulation'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 71,
    leetcodeUrl: 'https://leetcode.com/problems/single-number/',
    sources: ['LeetCodeWizard', 'NeetCode', 'Blind75'],
    timeComplexity: 'O(n)',
    spaceComplexity: 'O(1)'
  },
  {
    id: 'number-of-1-bits',
    title: 'Number of 1 Bits',
    difficulty: 'Easy',
    category: 'Bit Manipulation',
    patterns: ['bit-manipulation'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 58,
    leetcodeUrl: 'https://leetcode.com/problems/number-of-1-bits/',
    sources: ['NeetCode', 'Blind75'],
    timeComplexity: 'O(1)',
    spaceComplexity: 'O(1)'
  },
  {
    id: 'counting-bits',
    title: 'Counting Bits',
    difficulty: 'Easy',
    category: 'Dynamic Programming',
    patterns: ['bit-manipulation', '1d-dynamic-programming'],
    companies: ['Google', 'Amazon', 'Facebook'],
    frequency: 54,
    leetcodeUrl: 'https://leetcode.com/problems/counting-bits/',
    sources: ['NeetCode'],
    timeComplexity: 'O(n)',
    spaceComplexity: 'O(n)'
  },
  {
    id: 'reverse-bits',
    title: 'Reverse Bits',
    difficulty: 'Easy',
    category: 'Bit Manipulation',
    patterns: ['bit-manipulation'],
    companies: ['Google', 'Amazon', 'Facebook'],
    frequency: 46,
    leetcodeUrl: 'https://leetcode.com/problems/reverse-bits/',
    sources: ['NeetCode', 'Blind75'],
    timeComplexity: 'O(1)',
    spaceComplexity: 'O(1)'
  },
  {
    id: 'missing-number',
    title: 'Missing Number',
    difficulty: 'Easy',
    category: 'Array',
    patterns: ['bit-manipulation', 'math-geometry'],
    companies: ['Google', 'Amazon', 'Microsoft', 'Facebook'],
    frequency: 63,
    leetcodeUrl: 'https://leetcode.com/problems/missing-number/',
    sources: ['LeetCodeWizard', 'NeetCode'],
    timeComplexity: 'O(n)',
    spaceComplexity: 'O(1)'
  },
  {
    id: 'sum-of-two-integers',
    title: 'Sum of Two Integers',
    difficulty: 'Medium',
    category: 'Math',
    patterns: ['bit-manipulation'],
    companies: ['Google', 'Amazon', 'Facebook'],
    frequency: 49,
    leetcodeUrl: 'https://leetcode.com/problems/sum-of-two-integers/',
    sources: ['NeetCode', 'Blind75'],
    timeComplexity: 'O(1)',
    spaceComplexity: 'O(1)'
  }
]; 